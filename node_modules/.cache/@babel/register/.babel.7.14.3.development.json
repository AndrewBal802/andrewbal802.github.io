{
  "{\"assumptions\":{},\"sourceRoot\":\"/home/andrew/Documents/Portfolio/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/andrew/Documents/Portfolio\",\"filename\":\"/home/andrew/Documents/Portfolio/gulpfile.babel.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/andrew/Documents/Portfolio\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.14.3": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/andrew/Documents/Portfolio/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/andrew/Documents/Portfolio",
      "filename": "/home/andrew/Documents/Portfolio/gulpfile.babel.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/andrew/Documents/Portfolio",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/andrew/Documents/Portfolio/gulpfile.babel.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/andrew/Documents/Portfolio/gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/andrew/Documents/Portfolio/",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "/**\n * Gulpfile.\n *\n * Gulp with WordPress.\n *\n * Implements:\n *      1. Live reloads browser with BrowserSync.\n *      2. CSS: Sass to CSS conversion, error catching, Autoprefixing, Sourcemaps,\n *         CSS minification, and Merge Media Queries.\n *      3. JS: Concatenates & uglifies Vendor and Custom JS files.\n *      4. Images: Minifies PNG, JPEG, GIF and SVG images.\n *      5. Watches files for changes in CSS or JS.\n *      6. Watches files for changes in PHP.\n *      7. Corrects the line endings.\n *      8. InjectCSS instead of browser page reload.\n *      9. Generates .pot file for i18n and l10n.\n *\n * @tutorial https://github.com/ahmadawais/WPGulp\n * @author Ahmad Awais <https://twitter.com/MrAhmadAwais/>\n */\n\n/**\n * Load WPGulp Configuration.\n *\n * TODO: Customize your project in the wpgulp.js file.\n */\nconst config = require('./wpgulp.config.js');\n/**\n * Load Plugins.\n *\n * Load gulp plugins and passing them semantic names.\n */\n\n\nconst gulp = require('gulp'); // Gulp of-course.\n// CSS related plugins.\n\n\nconst sass = require('gulp-sass'); // Gulp plugin for Sass compilation.\n\n\nconst minifycss = require('gulp-uglifycss'); // Minifies CSS files.\n\n\nconst autoprefixer = require('gulp-autoprefixer'); // Autoprefixing magic.\n\n\nconst mmq = require('gulp-merge-media-queries'); // Combine matching media queries into one.\n\n\nconst rtlcss = require('gulp-rtlcss'); // Generates RTL stylesheet.\n// JS related plugins.\n\n\nconst concat = require('gulp-concat'); // Concatenates JS files.\n\n\nconst uglify = require('gulp-uglify'); // Minifies JS files.\n\n\nconst babel = require('gulp-babel'); // Compiles ESNext to browser compatible JS.\n// Image related plugins.\n\n\nconst imagemin = require('gulp-imagemin'); // Minify PNG, JPEG, GIF and SVG images with imagemin.\n// Utility related plugins.\n\n\nconst rename = require('gulp-rename'); // Renames files E.g. style.css -> style.min.css.\n\n\nconst lineec = require('gulp-line-ending-corrector'); // Consistent Line Endings for non UNIX systems. Gulp Plugin for Line Ending Corrector (A utility that makes sure your files have consistent line endings).\n\n\nconst filter = require('gulp-filter'); // Enables you to work on a subset of the original files by filtering them using a glob.\n\n\nconst sourcemaps = require('gulp-sourcemaps'); // Maps code in a compressed file (E.g. style.css) back to it’s original position in a source file (E.g. structure.scss, which was later combined with other css files to generate style.css).\n\n\nconst notify = require('gulp-notify'); // Sends message notification to you.\n\n\nconst browserSync = require('browser-sync').create(); // Reloads browser and injects CSS. Time-saving synchronized browser testing.\n\n\nconst wpPot = require('gulp-wp-pot'); // For generating the .pot file.\n\n\nconst sort = require('gulp-sort'); // Recommended to prevent unnecessary changes in pot-file.\n\n\nconst cache = require('gulp-cache'); // Cache files in stream for later use.\n\n\nconst remember = require('gulp-remember'); //  Adds all the files it has ever seen back into the stream.\n\n\nconst plumber = require('gulp-plumber'); // Prevent pipe breaking caused by errors from gulp plugins.\n\n\nconst beep = require('beepbeep');\n\nconst zip = require('gulp-zip'); // Zip plugin or theme file.\n\n/**\n * Custom Error Handler.\n *\n * @param Mixed err\n */\n\n\nconst errorHandler = r => {\n  notify.onError('\\n\\n❌  ===> ERROR: <%= error.message %>\\n')(r);\n  beep(); // this.emit('end');\n};\n/**\n * Task: `browser-sync`.\n *\n * Live Reloads, CSS injections, Localhost tunneling.\n * @link http://www.browsersync.io/docs/options/\n *\n * @param {Mixed} done Done.\n */\n\n\nconst browsersync = done => {\n  browserSync.init({\n    server: {\n      baseDir: \"./\"\n    },\n    //proxy: \"localhost:8080\",\n    //port: 5000,\n    open: config.browserAutoOpen,\n    injectChanges: config.injectChanges,\n    watchEvents: ['change', 'add', 'unlink', 'addDir', 'unlinkDir']\n  });\n  done();\n}; // Helper function to allow browser reload with Gulp 4.\n\n\nconst reload = done => {\n  browserSync.reload();\n  done();\n};\n/**\n * Task: `styles`.\n *\n * Compiles Sass, Autoprefixes it and Minifies CSS.\n *\n * This task does the following:\n *    1. Gets the source scss file\n *    2. Compiles Sass to CSS\n *    3. Writes Sourcemaps for it\n *    4. Autoprefixes it and generates style.css\n *    5. Renames the CSS file with suffix .min.css\n *    6. Minifies the CSS file and generates style.min.css\n *    7. Injects CSS or reloads the browser via browserSync\n */\n\n\ngulp.task('styles', () => {\n  return gulp.src(config.styleSRC, {\n    allowEmpty: true\n  }).pipe(plumber(errorHandler)).pipe(sourcemaps.init()).pipe(sass({\n    errLogToConsole: config.errLogToConsole,\n    outputStyle: config.outputStyle,\n    precision: config.precision\n  })).on('error', sass.logError).pipe(sourcemaps.write({\n    includeContent: false\n  })).pipe(sourcemaps.init({\n    loadMaps: true\n  })).pipe(autoprefixer(config.BROWSERS_LIST)).pipe(sourcemaps.write('./')).pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n  .pipe(gulp.dest(config.styleDestination)).pipe(filter('**/*.css')) // Filtering stream to only css files.\n  .pipe(mmq({\n    log: true\n  })) // Merge Media Queries only for .min.css version.\n  .pipe(browserSync.stream()) // Reloads style.css if that is enqueued.\n  .pipe(rename({\n    suffix: '.min'\n  })).pipe(minifycss({\n    maxLineLen: 10\n  })).pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n  .pipe(gulp.dest(config.styleDestination)).pipe(filter('**/*.css')) // Filtering stream to only css files.\n  .pipe(browserSync.stream()); // Reloads style.min.css if that is enqueued.\n\n  /*\n  .pipe(\n  \tnotify({\n  \t\t//message: '\\n\\n✅  ===> STYLES — completed!\\n',\n  \t\tonLast: true\n  \t})\n  );\n  */\n});\n/**\n * Task: `stylesRTL`.\n *\n * Compiles Sass, Autoprefixes it, Generates RTL stylesheet, and Minifies CSS.\n *\n * This task does the following:\n *    1. Gets the source scss file\n *    2. Compiles Sass to CSS\n *    4. Autoprefixes it and generates style.css\n *    5. Renames the CSS file with suffix -rtl and generates style-rtl.css\n *    6. Writes Sourcemaps for style-rtl.css\n *    7. Renames the CSS files with suffix .min.css\n *    8. Minifies the CSS file and generates style-rtl.min.css\n *    9. Injects CSS or reloads the browser via browserSync\n */\n\ngulp.task('stylesRTL', () => {\n  return gulp.src(config.styleSRC, {\n    allowEmpty: true\n  }).pipe(plumber(errorHandler)).pipe(sourcemaps.init()).pipe(sass({\n    errLogToConsole: config.errLogToConsole,\n    outputStyle: config.outputStyle,\n    precision: config.precision\n  })).on('error', sass.logError).pipe(sourcemaps.write({\n    includeContent: false\n  })).pipe(sourcemaps.init({\n    loadMaps: true\n  })).pipe(autoprefixer(config.BROWSERS_LIST)).pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n  .pipe(rename({\n    suffix: '-rtl'\n  })) // Append \"-rtl\" to the filename.\n  .pipe(rtlcss()) // Convert to RTL.\n  .pipe(sourcemaps.write('./')) // Output sourcemap for style-rtl.css.\n  .pipe(gulp.dest(config.styleDestination)).pipe(filter('**/*.css')) // Filtering stream to only css files.\n  .pipe(browserSync.stream()) // Reloads style.css or style-rtl.css, if that is enqueued.\n  .pipe(mmq({\n    log: true\n  })) // Merge Media Queries only for .min.css version.\n  .pipe(rename({\n    suffix: '.min'\n  })).pipe(minifycss({\n    maxLineLen: 10\n  })).pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n  .pipe(gulp.dest(config.styleDestination)).pipe(filter('**/*.css')) // Filtering stream to only css files.\n  .pipe(browserSync.stream()); // Reloads style.css or style-rtl.css, if that is enqueued.\n\n  /*\n  \t.pipe(\n  \t\tnotify({\n  \t\t\t//message: '\\n\\n✅  ===> STYLES RTL — completed!\\n',\n  \t\t\tonLast: true\n  \t\t})\n  \t);\n  \t*/\n});\n/**\n * Task: `vendorsJS`.\n *\n * Concatenate and uglify vendor JS scripts.\n *\n * This task does the following:\n *     1. Gets the source folder for JS vendor files\n *     2. Concatenates all the files and generates vendors.js\n *     3. Renames the JS file with suffix .min.js\n *     4. Uglifes/Minifies the JS file and generates vendors.min.js\n */\n\ngulp.task('vendorsJS', () => {\n  return gulp.src(config.jsVendorSRC, {\n    since: gulp.lastRun('vendorsJS')\n  }) // Only run on changed files.\n  .pipe(plumber(errorHandler)).pipe(babel({\n    presets: [['@babel/preset-env', // Preset to compile your modern JS to ES5.\n    {\n      targets: {\n        browsers: config.BROWSERS_LIST\n      } // Target browser list to support.\n\n    }]]\n  })).pipe(remember(config.jsVendorSRC)) // Bring all files back to stream.\n  .pipe(concat(config.jsVendorFile + '.js')).pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n  .pipe(gulp.dest(config.jsVendorDestination)).pipe(rename({\n    basename: config.jsVendorFile,\n    suffix: '.min'\n  })).pipe(uglify()).pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n  .pipe(gulp.dest(config.jsVendorDestination));\n  /*\n  .pipe(\n  \tnotify({\n  \t\t//message: '\\n\\n✅  ===> VENDOR JS — completed!\\n',\n  \t\tonLast: true\n  \t})\n  );\n  */\n});\n/**\n * Task: `customJS`.\n *\n * Concatenate and uglify custom JS scripts.\n *\n * This task does the following:\n *     1. Gets the source folder for JS custom files\n *     2. Concatenates all the files and generates custom.js\n *     3. Renames the JS file with suffix .min.js\n *     4. Uglifes/Minifies the JS file and generates custom.min.js\n */\n\ngulp.task('customJS', () => {\n  return gulp.src(config.jsCustomSRC, {\n    since: gulp.lastRun('customJS')\n  }) // Only run on changed files.\n  .pipe(plumber(errorHandler)).pipe(babel({\n    presets: [['@babel/preset-env', // Preset to compile your modern JS to ES5.\n    {\n      targets: {\n        browsers: config.BROWSERS_LIST\n      } // Target browser list to support.\n\n    }]]\n  })).pipe(remember(config.jsCustomSRC)) // Bring all files back to stream.\n  .pipe(concat(config.jsCustomFile + '.js')).pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n  .pipe(gulp.dest(config.jsCustomDestination)).pipe(rename({\n    basename: config.jsCustomFile,\n    suffix: '.min'\n  })).pipe(uglify()).pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n  .pipe(gulp.dest(config.jsCustomDestination));\n  /*\n  .pipe(\n  \tnotify({\n  \t\t//message: '\\n\\n✅  ===> CUSTOM JS — completed!\\n',\n  \t\tonLast: true\n  \t})\n  );\n  */\n});\n/**\n * Task: `images`.\n *\n * Minifies PNG, JPEG, GIF and SVG images.\n *\n * This task does the following:\n *     1. Gets the source of images raw folder\n *     2. Minifies PNG, JPEG, GIF and SVG images\n *     3. Generates and saves the optimized images\n *\n * This task will run only once, if you want to run it\n * again, do it with the command `gulp images`.\n *\n * Read the following to change these options.\n * @link https://github.com/sindresorhus/gulp-imagemin\n */\n\ngulp.task('images', () => {\n  return gulp.src(config.imgSRC).pipe(cache(imagemin([imagemin.gifsicle({\n    interlaced: true\n  }), imagemin.mozjpeg({\n    quality: 90,\n    progressive: true\n  }), imagemin.optipng({\n    optimizationLevel: 3\n  }), // 0-7 low-high.\n  imagemin.svgo({\n    plugins: [{\n      removeViewBox: true\n    }, {\n      cleanupIDs: false\n    }]\n  })]))).pipe(gulp.dest(config.imgDST));\n  /*\n  .pipe(\n  \tnotify({\n  \t\t//message: '\\n\\n✅  ===> IMAGES — completed!\\n',\n  \t\tonLast: true\n  \t})\n  );\n  */\n});\n/**\n * Task: `clear-images-cache`.\n *\n * Deletes the images cache. By running the next \"images\" task,\n * each image will be regenerated.\n */\n\ngulp.task('clearCache', function (done) {\n  return cache.clearAll(done);\n});\n/**\n * WP POT Translation File Generator.\n *\n * This task does the following:\n * 1. Gets the source of all the PHP files\n * 2. Sort files in stream by path or any custom sort comparator\n * 3. Applies wpPot with the variable set at the top of this file\n * 4. Generate a .pot file of i18n that can be used for l10n to build .mo file\n */\n\ngulp.task('translate', () => {\n  return gulp.src(config.watchPhp).pipe(sort()).pipe(wpPot({\n    domain: config.textDomain,\n    package: config.packageName,\n    bugReport: config.bugReport,\n    lastTranslator: config.lastTranslator,\n    team: config.team\n  })).pipe(gulp.dest(config.translationDestination + '/' + config.translationFile));\n  /*\n  .pipe(\n  \tnotify({\n  \t\t//message: '\\n\\n✅  ===> TRANSLATE — completed!\\n',\n  \t\tonLast: true\n  \t})\n  );\n  */\n});\n/**\n * Zips theme or plugin and places in the parent directory\n *\n * zipIncludeGlob: Files to be included in the zip file\n * zipIgnoreGlob: Files to be ignored from the zip file\n * zipDestination: Must be a folder outside of the zip folder.\n * zipName: theme.zip or plugin.zip\n */\n\ngulp.task('zip', () => {\n  const src = [...config.zipIncludeGlob, ...config.zipIgnoreGlob];\n  return gulp.src(src).pipe(zip(config.zipName)).pipe(gulp.dest(config.zipDestination));\n});\n/**\n * Watch Tasks.\n *\n * Watches for file changes and runs specific tasks.\n */\n\ngulp.task('default', gulp.parallel('styles', 'vendorsJS', 'customJS', 'images', browsersync, () => {\n  gulp.watch(config.watchPhp, reload); // Reload on PHP file changes.\n\n  gulp.watch(config.watchStyles, gulp.parallel('styles')); // Reload on SCSS file changes.\n\n  gulp.watch(config.watchJsVendor, gulp.series('vendorsJS', reload)); // Reload on vendorsJS file changes.\n\n  gulp.watch(config.watchJsCustom, gulp.series('customJS', reload)); // Reload on customJS file changes.\n\n  gulp.watch(config.imgSRC, gulp.series('images', reload)); // Reload on customJS file changes.\n}));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "config",
        "require",
        "gulp",
        "sass",
        "minifycss",
        "autoprefixer",
        "mmq",
        "rtlcss",
        "concat",
        "uglify",
        "babel",
        "imagemin",
        "rename",
        "lineec",
        "filter",
        "sourcemaps",
        "notify",
        "browserSync",
        "create",
        "wpPot",
        "sort",
        "cache",
        "remember",
        "plumber",
        "beep",
        "zip",
        "errorHandler",
        "r",
        "onError",
        "browsersync",
        "done",
        "init",
        "server",
        "baseDir",
        "open",
        "browserAutoOpen",
        "injectChanges",
        "watchEvents",
        "reload",
        "task",
        "src",
        "styleSRC",
        "allowEmpty",
        "pipe",
        "errLogToConsole",
        "outputStyle",
        "precision",
        "on",
        "logError",
        "write",
        "includeContent",
        "loadMaps",
        "BROWSERS_LIST",
        "dest",
        "styleDestination",
        "log",
        "stream",
        "suffix",
        "maxLineLen",
        "jsVendorSRC",
        "since",
        "lastRun",
        "presets",
        "targets",
        "browsers",
        "jsVendorFile",
        "jsVendorDestination",
        "basename",
        "jsCustomSRC",
        "jsCustomFile",
        "jsCustomDestination",
        "imgSRC",
        "gifsicle",
        "interlaced",
        "mozjpeg",
        "quality",
        "progressive",
        "optipng",
        "optimizationLevel",
        "svgo",
        "plugins",
        "removeViewBox",
        "cleanupIDs",
        "imgDST",
        "clearAll",
        "watchPhp",
        "domain",
        "textDomain",
        "package",
        "packageName",
        "bugReport",
        "lastTranslator",
        "team",
        "translationDestination",
        "translationFile",
        "zipIncludeGlob",
        "zipIgnoreGlob",
        "zipName",
        "zipDestination",
        "parallel",
        "watch",
        "watchStyles",
        "watchJsVendor",
        "series",
        "watchJsCustom"
      ],
      "mappings": "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",
      "sourceRoot": "/home/andrew/Documents/Portfolio/",
      "sourcesContent": [
        "/**\n * Gulpfile.\n *\n * Gulp with WordPress.\n *\n * Implements:\n *      1. Live reloads browser with BrowserSync.\n *      2. CSS: Sass to CSS conversion, error catching, Autoprefixing, Sourcemaps,\n *         CSS minification, and Merge Media Queries.\n *      3. JS: Concatenates & uglifies Vendor and Custom JS files.\n *      4. Images: Minifies PNG, JPEG, GIF and SVG images.\n *      5. Watches files for changes in CSS or JS.\n *      6. Watches files for changes in PHP.\n *      7. Corrects the line endings.\n *      8. InjectCSS instead of browser page reload.\n *      9. Generates .pot file for i18n and l10n.\n *\n * @tutorial https://github.com/ahmadawais/WPGulp\n * @author Ahmad Awais <https://twitter.com/MrAhmadAwais/>\n */\n\n/**\n * Load WPGulp Configuration.\n *\n * TODO: Customize your project in the wpgulp.js file.\n */\nconst config = require('./wpgulp.config.js');\n\n/**\n * Load Plugins.\n *\n * Load gulp plugins and passing them semantic names.\n */\nconst gulp = require('gulp'); // Gulp of-course.\n\n// CSS related plugins.\nconst sass = require('gulp-sass'); // Gulp plugin for Sass compilation.\nconst minifycss = require('gulp-uglifycss'); // Minifies CSS files.\nconst autoprefixer = require('gulp-autoprefixer'); // Autoprefixing magic.\nconst mmq = require('gulp-merge-media-queries'); // Combine matching media queries into one.\nconst rtlcss = require('gulp-rtlcss'); // Generates RTL stylesheet.\n\n// JS related plugins.\nconst concat = require('gulp-concat'); // Concatenates JS files.\nconst uglify = require('gulp-uglify'); // Minifies JS files.\nconst babel = require('gulp-babel'); // Compiles ESNext to browser compatible JS.\n\n// Image related plugins.\nconst imagemin = require('gulp-imagemin'); // Minify PNG, JPEG, GIF and SVG images with imagemin.\n\n// Utility related plugins.\nconst rename = require('gulp-rename'); // Renames files E.g. style.css -> style.min.css.\nconst lineec = require('gulp-line-ending-corrector'); // Consistent Line Endings for non UNIX systems. Gulp Plugin for Line Ending Corrector (A utility that makes sure your files have consistent line endings).\nconst filter = require('gulp-filter'); // Enables you to work on a subset of the original files by filtering them using a glob.\nconst sourcemaps = require('gulp-sourcemaps'); // Maps code in a compressed file (E.g. style.css) back to it’s original position in a source file (E.g. structure.scss, which was later combined with other css files to generate style.css).\nconst notify = require('gulp-notify'); // Sends message notification to you.\nconst browserSync = require('browser-sync').create(); // Reloads browser and injects CSS. Time-saving synchronized browser testing.\nconst wpPot = require('gulp-wp-pot'); // For generating the .pot file.\nconst sort = require('gulp-sort'); // Recommended to prevent unnecessary changes in pot-file.\nconst cache = require('gulp-cache'); // Cache files in stream for later use.\nconst remember = require('gulp-remember'); //  Adds all the files it has ever seen back into the stream.\nconst plumber = require('gulp-plumber'); // Prevent pipe breaking caused by errors from gulp plugins.\nconst beep = require('beepbeep');\nconst zip = require('gulp-zip'); // Zip plugin or theme file.\n\n/**\n * Custom Error Handler.\n *\n * @param Mixed err\n */\nconst errorHandler = r => {\n\tnotify.onError('\\n\\n❌  ===> ERROR: <%= error.message %>\\n')(r);\n\tbeep();\n\n\t// this.emit('end');\n};\n\n/**\n * Task: `browser-sync`.\n *\n * Live Reloads, CSS injections, Localhost tunneling.\n * @link http://www.browsersync.io/docs/options/\n *\n * @param {Mixed} done Done.\n */\nconst browsersync = done => {\n\tbrowserSync.init({\n\t\tserver: {\n            baseDir: \"./\"\n        },\n\t\t//proxy: \"localhost:8080\",\n\t\t//port: 5000,\n\t\topen: config.browserAutoOpen,\n\t\tinjectChanges: config.injectChanges,\n\t\twatchEvents: ['change', 'add', 'unlink', 'addDir', 'unlinkDir']\n\t});\n\tdone();\n};\n// Helper function to allow browser reload with Gulp 4.\nconst reload = done => {\n\tbrowserSync.reload();\n\tdone();\n}\n\n\n\n\n/**\n * Task: `styles`.\n *\n * Compiles Sass, Autoprefixes it and Minifies CSS.\n *\n * This task does the following:\n *    1. Gets the source scss file\n *    2. Compiles Sass to CSS\n *    3. Writes Sourcemaps for it\n *    4. Autoprefixes it and generates style.css\n *    5. Renames the CSS file with suffix .min.css\n *    6. Minifies the CSS file and generates style.min.css\n *    7. Injects CSS or reloads the browser via browserSync\n */\ngulp.task('styles', () => {\n\treturn gulp\n\t\t.src(config.styleSRC, {allowEmpty: true})\n\t\t.pipe(plumber(errorHandler))\n\t\t.pipe(sourcemaps.init())\n\t\t.pipe(\n\t\t\tsass({\n\t\t\t\terrLogToConsole: config.errLogToConsole,\n\t\t\t\toutputStyle: config.outputStyle,\n\t\t\t\tprecision: config.precision\n\t\t\t})\n\t\t)\n\t\t.on('error', sass.logError)\n\t\t.pipe(sourcemaps.write({includeContent: false}))\n\t\t.pipe(sourcemaps.init({loadMaps: true}))\n\t\t.pipe(autoprefixer(config.BROWSERS_LIST))\n\t\t.pipe(sourcemaps.write('./'))\n\t\t.pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n\t\t.pipe(gulp.dest(config.styleDestination))\n\t\t.pipe(filter('**/*.css')) // Filtering stream to only css files.\n\t\t.pipe(mmq({log: true})) // Merge Media Queries only for .min.css version.\n\t\t.pipe(browserSync.stream()) // Reloads style.css if that is enqueued.\n\t\t.pipe(rename({suffix: '.min'}))\n\t\t.pipe(minifycss({maxLineLen: 10}))\n\t\t.pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n\t\t.pipe(gulp.dest(config.styleDestination))\n\t\t.pipe(filter('**/*.css')) // Filtering stream to only css files.\n\t\t.pipe(browserSync.stream()) // Reloads style.min.css if that is enqueued.\n\t\t\n\t\t/*\n\t\t.pipe(\n\t\t\tnotify({\n\t\t\t\t//message: '\\n\\n✅  ===> STYLES — completed!\\n',\n\t\t\t\tonLast: true\n\t\t\t})\n\t\t);\n\t\t*/\n});\n\n/**\n * Task: `stylesRTL`.\n *\n * Compiles Sass, Autoprefixes it, Generates RTL stylesheet, and Minifies CSS.\n *\n * This task does the following:\n *    1. Gets the source scss file\n *    2. Compiles Sass to CSS\n *    4. Autoprefixes it and generates style.css\n *    5. Renames the CSS file with suffix -rtl and generates style-rtl.css\n *    6. Writes Sourcemaps for style-rtl.css\n *    7. Renames the CSS files with suffix .min.css\n *    8. Minifies the CSS file and generates style-rtl.min.css\n *    9. Injects CSS or reloads the browser via browserSync\n */\ngulp.task('stylesRTL', () => {\n\treturn gulp\n\t\t.src(config.styleSRC, {allowEmpty: true})\n\t\t.pipe(plumber(errorHandler))\n\t\t.pipe(sourcemaps.init())\n\t\t.pipe(\n\t\t\tsass({\n\t\t\t\terrLogToConsole: config.errLogToConsole,\n\t\t\t\toutputStyle: config.outputStyle,\n\t\t\t\tprecision: config.precision\n\t\t\t})\n\t\t)\n\t\t.on('error', sass.logError)\n\t\t.pipe(sourcemaps.write({includeContent: false}))\n\t\t.pipe(sourcemaps.init({loadMaps: true}))\n\t\t.pipe(autoprefixer(config.BROWSERS_LIST))\n\t\t.pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n\t\t.pipe(rename({suffix: '-rtl'})) // Append \"-rtl\" to the filename.\n\t\t.pipe(rtlcss()) // Convert to RTL.\n\t\t.pipe(sourcemaps.write('./')) // Output sourcemap for style-rtl.css.\n\t\t.pipe(gulp.dest(config.styleDestination))\n\t\t.pipe(filter('**/*.css')) // Filtering stream to only css files.\n\t\t.pipe(browserSync.stream()) // Reloads style.css or style-rtl.css, if that is enqueued.\n\t\t.pipe(mmq({log: true})) // Merge Media Queries only for .min.css version.\n\t\t.pipe(rename({suffix: '.min'}))\n\t\t.pipe(minifycss({maxLineLen: 10}))\n\t\t.pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n\t\t.pipe(gulp.dest(config.styleDestination))\n\t\t.pipe(filter('**/*.css')) // Filtering stream to only css files.\n\t\t.pipe(browserSync.stream()) // Reloads style.css or style-rtl.css, if that is enqueued.\n\t\t\n\t/*\n\t\t.pipe(\n\t\t\tnotify({\n\t\t\t\t//message: '\\n\\n✅  ===> STYLES RTL — completed!\\n',\n\t\t\t\tonLast: true\n\t\t\t})\n\t\t);\n\t\t*/\n});\n\n/**\n * Task: `vendorsJS`.\n *\n * Concatenate and uglify vendor JS scripts.\n *\n * This task does the following:\n *     1. Gets the source folder for JS vendor files\n *     2. Concatenates all the files and generates vendors.js\n *     3. Renames the JS file with suffix .min.js\n *     4. Uglifes/Minifies the JS file and generates vendors.min.js\n */\ngulp.task('vendorsJS', () => {\n\treturn gulp\n\t\t.src(config.jsVendorSRC, {since: gulp.lastRun('vendorsJS')}) // Only run on changed files.\n\t\t.pipe(plumber(errorHandler))\n\t\t.pipe(\n\t\t\tbabel({\n\t\t\t\tpresets: [\n\t\t\t\t\t[\n\t\t\t\t\t\t'@babel/preset-env', // Preset to compile your modern JS to ES5.\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttargets: {browsers: config.BROWSERS_LIST} // Target browser list to support.\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t})\n\t\t)\n\t\t.pipe(remember(config.jsVendorSRC)) // Bring all files back to stream.\n\t\t.pipe(concat(config.jsVendorFile + '.js'))\n\t\t.pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n\t\t.pipe(gulp.dest(config.jsVendorDestination))\n\t\t.pipe(\n\t\t\trename({\n\t\t\t\tbasename: config.jsVendorFile,\n\t\t\t\tsuffix: '.min'\n\t\t\t})\n\t\t)\n\t\t.pipe(uglify())\n\t\t.pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n\t\t.pipe(gulp.dest(config.jsVendorDestination))\n\t\t\n\t\t/*\n\t\t.pipe(\n\t\t\tnotify({\n\t\t\t\t//message: '\\n\\n✅  ===> VENDOR JS — completed!\\n',\n\t\t\t\tonLast: true\n\t\t\t})\n\t\t);\n\t\t*/\n});\n\n/**\n * Task: `customJS`.\n *\n * Concatenate and uglify custom JS scripts.\n *\n * This task does the following:\n *     1. Gets the source folder for JS custom files\n *     2. Concatenates all the files and generates custom.js\n *     3. Renames the JS file with suffix .min.js\n *     4. Uglifes/Minifies the JS file and generates custom.min.js\n */\ngulp.task('customJS', () => {\n\treturn gulp\n\t\t.src(config.jsCustomSRC, {since: gulp.lastRun('customJS')}) // Only run on changed files.\n\t\t.pipe(plumber(errorHandler))\n\t\t.pipe(\n\t\t\tbabel({\n\t\t\t\tpresets: [\n\t\t\t\t\t[\n\t\t\t\t\t\t'@babel/preset-env', // Preset to compile your modern JS to ES5.\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttargets: {browsers: config.BROWSERS_LIST} // Target browser list to support.\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t})\n\t\t)\n\t\t.pipe(remember(config.jsCustomSRC)) // Bring all files back to stream.\n\t\t.pipe(concat(config.jsCustomFile + '.js'))\n\t\t.pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n\t\t.pipe(gulp.dest(config.jsCustomDestination))\n\t\t.pipe(\n\t\t\trename({\n\t\t\t\tbasename: config.jsCustomFile,\n\t\t\t\tsuffix: '.min'\n\t\t\t})\n\t\t)\n\t\t.pipe(uglify())\n\t\t.pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n\t\t.pipe(gulp.dest(config.jsCustomDestination))\n\t\t\n\t\t/*\n\t\t.pipe(\n\t\t\tnotify({\n\t\t\t\t//message: '\\n\\n✅  ===> CUSTOM JS — completed!\\n',\n\t\t\t\tonLast: true\n\t\t\t})\n\t\t);\n\t\t*/\n});\n\n/**\n * Task: `images`.\n *\n * Minifies PNG, JPEG, GIF and SVG images.\n *\n * This task does the following:\n *     1. Gets the source of images raw folder\n *     2. Minifies PNG, JPEG, GIF and SVG images\n *     3. Generates and saves the optimized images\n *\n * This task will run only once, if you want to run it\n * again, do it with the command `gulp images`.\n *\n * Read the following to change these options.\n * @link https://github.com/sindresorhus/gulp-imagemin\n */\ngulp.task('images', () => {\n\treturn gulp\n\t\t.src(config.imgSRC)\n\t\t.pipe(\n\t\t\tcache(\n\t\t\t\timagemin([\n\t\t\t\t\timagemin.gifsicle({interlaced: true}),\n\t\t\t\t\timagemin.mozjpeg({quality: 90, progressive: true}),\n\t\t\t\t\timagemin.optipng({optimizationLevel: 3}), // 0-7 low-high.\n\t\t\t\t\timagemin.svgo({\n\t\t\t\t\t\tplugins: [{removeViewBox: true}, {cleanupIDs: false}]\n\t\t\t\t\t})\n\t\t\t\t])\n\t\t\t)\n\t\t)\n\t\t.pipe(gulp.dest(config.imgDST))\n\t\t/*\n\t\t.pipe(\n\t\t\tnotify({\n\t\t\t\t//message: '\\n\\n✅  ===> IMAGES — completed!\\n',\n\t\t\t\tonLast: true\n\t\t\t})\n\t\t);\n\t\t*/\n});\n\n/**\n * Task: `clear-images-cache`.\n *\n * Deletes the images cache. By running the next \"images\" task,\n * each image will be regenerated.\n */\ngulp.task('clearCache', function (done) {\n\treturn cache.clearAll(done);\n});\n\n/**\n * WP POT Translation File Generator.\n *\n * This task does the following:\n * 1. Gets the source of all the PHP files\n * 2. Sort files in stream by path or any custom sort comparator\n * 3. Applies wpPot with the variable set at the top of this file\n * 4. Generate a .pot file of i18n that can be used for l10n to build .mo file\n */\ngulp.task('translate', () => {\n\treturn gulp\n\t\t.src(config.watchPhp)\n\t\t.pipe(sort())\n\t\t.pipe(\n\t\t\twpPot({\n\t\t\t\tdomain: config.textDomain,\n\t\t\t\tpackage: config.packageName,\n\t\t\t\tbugReport: config.bugReport,\n\t\t\t\tlastTranslator: config.lastTranslator,\n\t\t\t\tteam: config.team\n\t\t\t})\n\t\t)\n\t\t.pipe(gulp.dest(config.translationDestination + '/' + config.translationFile))\n\t\t/*\n\t\t.pipe(\n\t\t\tnotify({\n\t\t\t\t//message: '\\n\\n✅  ===> TRANSLATE — completed!\\n',\n\t\t\t\tonLast: true\n\t\t\t})\n\t\t);\n\t\t*/\n});\n\n/**\n * Zips theme or plugin and places in the parent directory\n *\n * zipIncludeGlob: Files to be included in the zip file\n * zipIgnoreGlob: Files to be ignored from the zip file\n * zipDestination: Must be a folder outside of the zip folder.\n * zipName: theme.zip or plugin.zip\n */\ngulp.task('zip', () => {\n\tconst src = [...config.zipIncludeGlob, ...config.zipIgnoreGlob];\n\treturn gulp.src(src).pipe(zip(config.zipName)).pipe(gulp.dest(config.zipDestination));\n});\n\n/**\n * Watch Tasks.\n *\n * Watches for file changes and runs specific tasks.\n */\ngulp.task(\n\t'default',\n\tgulp.parallel('styles', 'vendorsJS', 'customJS', 'images', browsersync, () => {\n\t\tgulp.watch(config.watchPhp, reload); // Reload on PHP file changes.\n\t\tgulp.watch(config.watchStyles, gulp.parallel('styles')); // Reload on SCSS file changes.\n\t\tgulp.watch(config.watchJsVendor, gulp.series('vendorsJS', reload)); // Reload on vendorsJS file changes.\n\t\tgulp.watch(config.watchJsCustom, gulp.series('customJS', reload)); // Reload on customJS file changes.\n\t\tgulp.watch(config.imgSRC, gulp.series('images', reload)); // Reload on customJS file changes.\n\t})\n);\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1621555859330
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/andrew/Documents/Portfolio/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/andrew/Documents/Portfolio\",\"filename\":\"/home/andrew/Documents/Portfolio/wpgulp.config.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/andrew/Documents/Portfolio\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.14.3": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/andrew/Documents/Portfolio/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/andrew/Documents/Portfolio",
      "filename": "/home/andrew/Documents/Portfolio/wpgulp.config.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/andrew/Documents/Portfolio",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/andrew/Documents/Portfolio/wpgulp.config.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/andrew/Documents/Portfolio/wpgulp.config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/andrew/Documents/Portfolio/",
        "sourceFileName": "wpgulp.config.js"
      }
    },
    "ast": null,
    "code": "/**\n * WPGulp Configuration File\n *\n * 1. Edit the variables as per your project requirements.\n * 2. In paths you can add <<glob or array of globs>>.\n *\n * @package WPGulp\n */\n// Project options.\n// Local project URL of your already running WordPress site.\n// > Could be something like \"wpgulp.local\" or \"localhost\"\n// > depending upon your local WordPress setup.\nconst projectURL = 'localhost'; // Theme/Plugin URL. Leave it like it is; since our gulpfile.js lives in the root folder.\n\nconst productURL = './';\nconst browserAutoOpen = true;\nconst injectChanges = true; // >>>>> Style options.\n// Path to main .scss file.\n\nconst styleSRC = './assets/css/style.scss'; // Path to place the compiled CSS file. Default set to root folder.\n\nconst styleDestination = './'; // Available options → 'compact' or 'compressed' or 'nested' or 'expanded'\n\nconst outputStyle = 'compact';\nconst errLogToConsole = true;\nconst precision = 10; // JS Vendor options.\n// Path to JS vendor folder.\n\nconst jsVendorSRC = './assets/js/vendor/*.js'; // Path to place the compiled JS vendors file.\n\nconst jsVendorDestination = './assets/js/'; // Compiled JS vendors file name. Default set to vendors i.e. vendors.js.\n\nconst jsVendorFile = 'vendor'; // JS Custom options.\n// Path to JS custom scripts folder.\n\nconst jsCustomSRC = './assets/js/custom/*.js'; // Path to place the compiled JS custom scripts file.\n\nconst jsCustomDestination = './assets/js/'; // Compiled JS custom file name. Default set to custom i.e. custom.js.\n\nconst jsCustomFile = 'custom'; // Images options.\n// Source folder of images which should be optimized and watched.\n// > You can also specify types e.g. raw/**.{png,jpg,gif} in the glob.\n\nconst imgSRC = './assets/img/raw/**/*'; // Destination folder of optimized images.\n// > Must be different from the imagesSRC folder.\n\nconst imgDST = './assets/img/'; // >>>>> Watch files paths.\n// Path to all *.scss files inside css folder and inside them.\n\nconst watchStyles = './assets/css/**/*.scss'; // Path to all vendor JS files.\n\nconst watchJsVendor = './assets/js/vendor/*.js'; // Path to all custom JS files.\n\nconst watchJsCustom = './assets/js/custom/*.js'; // Path to all PHP files.\n\nconst watchPhp = './**/*.php'; // >>>>> Zip file config.\n// Must have.zip at the end.\n\nconst zipName = 'file.zip'; // Must be a folder outside of the zip folder.\n\nconst zipDestination = './../'; // Default: Parent folder.\n\nconst zipIncludeGlob = ['./**/*']; // Default: Include all files/folders in current directory.\n// Default ignored files and folders for the zip file.\n\nconst zipIgnoreGlob = ['!./{node_modules,node_modules/**/*}', '!./.git', '!./.svn', '!./gulpfile.babel.js', '!./wpgulp.config.js', '!./.eslintrc.js', '!./.eslintignore', '!./.editorconfig', '!./phpcs.xml.dist', '!./vscode', '!./package.json', '!./package-lock.json', '!./assets/css/**/*', '!./assets/css', '!./assets/img/raw/**/*', '!./assets/img/raw', `!${imgSRC}`, `!${styleSRC}`, `!${jsCustomSRC}`, `!${jsVendorSRC}`]; // >>>>> Translation options.\n// Your text domain here.\n\nconst textDomain = 'WPGULP'; // Name of the translation file.\n\nconst translationFile = 'WPGULP.pot'; // Where to save the translation files.\n\nconst translationDestination = './languages'; // Package name.\n\nconst packageName = 'WPGULP'; // Where can users report bugs.\n\nconst bugReport = 'https://AhmadAwais.com/contact/'; // Last translator Email ID.\n\nconst lastTranslator = 'Ahmad Awais <your_email@email.com>'; // Team's Email ID.\n\nconst team = 'AhmadAwais <your_email@email.com>'; // Browsers you care about for auto-prefixing. Browserlist https://github.com/ai/browserslist\n// The following list is set as per WordPress requirements. Though; Feel free to change.\n\nconst BROWSERS_LIST = ['last 2 version', '> 1%']; // Export.\n\nmodule.exports = {\n  projectURL,\n  productURL,\n  browserAutoOpen,\n  injectChanges,\n  styleSRC,\n  styleDestination,\n  outputStyle,\n  errLogToConsole,\n  precision,\n  jsVendorSRC,\n  jsVendorDestination,\n  jsVendorFile,\n  jsCustomSRC,\n  jsCustomDestination,\n  jsCustomFile,\n  imgSRC,\n  imgDST,\n  watchStyles,\n  watchJsVendor,\n  watchJsCustom,\n  watchPhp,\n  zipName,\n  zipDestination,\n  zipIncludeGlob,\n  zipIgnoreGlob,\n  textDomain,\n  translationFile,\n  translationDestination,\n  packageName,\n  bugReport,\n  lastTranslator,\n  team,\n  BROWSERS_LIST\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "wpgulp.config.js"
      ],
      "names": [
        "projectURL",
        "productURL",
        "browserAutoOpen",
        "injectChanges",
        "styleSRC",
        "styleDestination",
        "outputStyle",
        "errLogToConsole",
        "precision",
        "jsVendorSRC",
        "jsVendorDestination",
        "jsVendorFile",
        "jsCustomSRC",
        "jsCustomDestination",
        "jsCustomFile",
        "imgSRC",
        "imgDST",
        "watchStyles",
        "watchJsVendor",
        "watchJsCustom",
        "watchPhp",
        "zipName",
        "zipDestination",
        "zipIncludeGlob",
        "zipIgnoreGlob",
        "textDomain",
        "translationFile",
        "translationDestination",
        "packageName",
        "bugReport",
        "lastTranslator",
        "team",
        "BROWSERS_LIST",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/andrew/Documents/Portfolio/",
      "sourcesContent": [
        "/**\n * WPGulp Configuration File\n *\n * 1. Edit the variables as per your project requirements.\n * 2. In paths you can add <<glob or array of globs>>.\n *\n * @package WPGulp\n */\n\n// Project options.\n\n// Local project URL of your already running WordPress site.\n// > Could be something like \"wpgulp.local\" or \"localhost\"\n// > depending upon your local WordPress setup.\nconst projectURL = 'localhost';\n\n// Theme/Plugin URL. Leave it like it is; since our gulpfile.js lives in the root folder.\nconst productURL = './';\nconst browserAutoOpen = true;\nconst injectChanges = true;\n\n// >>>>> Style options.\n// Path to main .scss file.\nconst styleSRC = './assets/css/style.scss';\n\n// Path to place the compiled CSS file. Default set to root folder.\nconst styleDestination = './';\n\n// Available options → 'compact' or 'compressed' or 'nested' or 'expanded'\nconst outputStyle = 'compact';\nconst errLogToConsole = true;\nconst precision = 10;\n\n// JS Vendor options.\n\n// Path to JS vendor folder.\nconst jsVendorSRC = './assets/js/vendor/*.js';\n\n// Path to place the compiled JS vendors file.\nconst jsVendorDestination = './assets/js/';\n\n// Compiled JS vendors file name. Default set to vendors i.e. vendors.js.\nconst jsVendorFile = 'vendor';\n\n// JS Custom options.\n\n// Path to JS custom scripts folder.\nconst jsCustomSRC = './assets/js/custom/*.js';\n\n// Path to place the compiled JS custom scripts file.\nconst jsCustomDestination = './assets/js/';\n\n// Compiled JS custom file name. Default set to custom i.e. custom.js.\nconst jsCustomFile = 'custom';\n\n// Images options.\n\n// Source folder of images which should be optimized and watched.\n// > You can also specify types e.g. raw/**.{png,jpg,gif} in the glob.\nconst imgSRC = './assets/img/raw/**/*';\n\n// Destination folder of optimized images.\n// > Must be different from the imagesSRC folder.\nconst imgDST = './assets/img/';\n\n// >>>>> Watch files paths.\n// Path to all *.scss files inside css folder and inside them.\nconst watchStyles = './assets/css/**/*.scss';\n\n// Path to all vendor JS files.\nconst watchJsVendor = './assets/js/vendor/*.js';\n\n// Path to all custom JS files.\nconst watchJsCustom = './assets/js/custom/*.js';\n\n// Path to all PHP files.\nconst watchPhp = './**/*.php';\n\n// >>>>> Zip file config.\n// Must have.zip at the end.\nconst zipName = 'file.zip';\n\n// Must be a folder outside of the zip folder.\nconst zipDestination = './../'; // Default: Parent folder.\nconst zipIncludeGlob = ['./**/*']; // Default: Include all files/folders in current directory.\n\n// Default ignored files and folders for the zip file.\nconst zipIgnoreGlob = [\n\t'!./{node_modules,node_modules/**/*}',\n\t'!./.git',\n\t'!./.svn',\n\t'!./gulpfile.babel.js',\n\t'!./wpgulp.config.js',\n\t'!./.eslintrc.js',\n\t'!./.eslintignore',\n\t'!./.editorconfig',\n\t'!./phpcs.xml.dist',\n\t'!./vscode',\n\t'!./package.json',\n\t'!./package-lock.json',\n\t'!./assets/css/**/*',\n\t'!./assets/css',\n\t'!./assets/img/raw/**/*',\n\t'!./assets/img/raw',\n\t`!${imgSRC}`,\n\t`!${styleSRC}`,\n\t`!${jsCustomSRC}`,\n\t`!${jsVendorSRC}`\n];\n\n// >>>>> Translation options.\n// Your text domain here.\nconst textDomain = 'WPGULP';\n\n// Name of the translation file.\nconst translationFile = 'WPGULP.pot';\n\n// Where to save the translation files.\nconst translationDestination = './languages';\n\n// Package name.\nconst packageName = 'WPGULP';\n\n// Where can users report bugs.\nconst bugReport = 'https://AhmadAwais.com/contact/';\n\n// Last translator Email ID.\nconst lastTranslator = 'Ahmad Awais <your_email@email.com>';\n\n// Team's Email ID.\nconst team = 'AhmadAwais <your_email@email.com>';\n\n// Browsers you care about for auto-prefixing. Browserlist https://github.com/ai/browserslist\n// The following list is set as per WordPress requirements. Though; Feel free to change.\nconst BROWSERS_LIST = ['last 2 version', '> 1%'];\n\n// Export.\nmodule.exports = {\n\tprojectURL,\n\tproductURL,\n\tbrowserAutoOpen,\n\tinjectChanges,\n\tstyleSRC,\n\tstyleDestination,\n\toutputStyle,\n\terrLogToConsole,\n\tprecision,\n\tjsVendorSRC,\n\tjsVendorDestination,\n\tjsVendorFile,\n\tjsCustomSRC,\n\tjsCustomDestination,\n\tjsCustomFile,\n\timgSRC,\n\timgDST,\n\twatchStyles,\n\twatchJsVendor,\n\twatchJsCustom,\n\twatchPhp,\n\tzipName,\n\tzipDestination,\n\tzipIncludeGlob,\n\tzipIgnoreGlob,\n\ttextDomain,\n\ttranslationFile,\n\ttranslationDestination,\n\tpackageName,\n\tbugReport,\n\tlastTranslator,\n\tteam,\n\tBROWSERS_LIST\n};\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1621391267141
  }
}